@page "/playlists"
@using music_manager_starter.Shared

@inject HttpClient Http
@inject NavigationManager Navigation
@code {
    // [Parameter]
    // public Playlist Playlist { get; set; }
    private List<Playlist> playlists;
    private string message;

    protected override async Task OnInitializedAsync()
    {

        playlists = await Http.GetFromJsonAsync<List<Playlist>>("api/playlists");
    }

     async Task RemovePlaylist(Playlist playlist)
    {

        var response = await Http.DeleteAsync($"api/playlists/{playlist.Id}");
        if (response.IsSuccessStatusCode)
        {
            message = "Playlist removed successfully!";
            playlists.Remove(playlist);
        }
        else
        {
            message = "Error adding playlist. Please try again.";
        }
    }
    private void EditPlaylist(int playlistId)
    {
        // Navigate to EditPlaylist page with the playlist ID as a route parameter
        Navigation.NavigateTo($"/EditPlaylist/{playlistId}");
    }


}


<div class="p-0 min-h-screen bg-pattern flex flex-col items-center justify-center">
    <h2 class="text-3xl font-bold text-white mb-8 text-center">Playlist Library</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
        @if (playlists != null && playlists.Count > 0)
        {
            @foreach (var playlist in playlists)
            {
                <div class="glass p-6 border border-gray-300 rounded-lg text-white transition-transform transform hover:scale-105 hover:shadow-xl">
                    <h3 class="text-xl font-semibold mb-2">@playlist.Name</h3>
                    <p class="text-md">Artist: <span class="font-light">@playlist.Creator</span></p>
                    <div class="buttons">
                        <button @onclick="() => EditPlaylist(playlist.Id)" class="button-styles">Edit</button>
                        <button @onclick="() => RemovePlaylist(playlist)" class="button-styles">Delete</button>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-span-1 text-center text-gray-400">No songs found.</div>
        }
    </div>
</div>

<style>
    .bg-pattern {
        background: linear-gradient(rgba(31, 41, 55, 0.7), rgba(31, 41, 55, 0.7)), url('dalle.webp');
        background-size: cover;
        background-position: center;
        font-family: 'Rajdhani', sans-serif;
    }

    .buttons{
        display: flex;
        justify-content: space-around;
    }

    .button-styles{
        
        background: black;
        color: white;
        padding: 0.5rem;
        border-radius: 30%;
        width: 45%;
        text-align: center;
    }

    button:hover {
        background: white;
        color: black;
    }

    .glass {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 10px;
        position: relative;
        overflow: hidden;
        width: 2614.11px;
        max-width: 264.11px;
    }

    .glass:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        pointer-events: none;
    }
</style>